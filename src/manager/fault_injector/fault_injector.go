package main

import (
	
	"fmt"
	"flag"
	"os"
	"time"

	"manager/rng"
	"manager/fault_injector/selector"
	"manager/fault_injector/injector"
)

func main() {
	repFile := flag.String("repmap", "replication.map", "Replication Map file")
	networkMapFileName := flag.String("netmap", "network.stat", "Network Map file (Generated by EntangledMPI)")
	flag.Parse()

	if *repFile == "" {
		fmt.Println("Enter replication file path")
		os.Exit(3)
	}

	if *networkMapFileName == "" {
		fmt.Println("Enter network map file path")
		os.Exit(3)
	}

	// Get Ranks to kill [array n]
	// Get interval to kill [array n]
	// Start killing

	grng := rng.NewGaussianGenerator(time.Now().UnixNano(), 5.0, 2.0)

	opt := &selector.SelectorOpts {
		ImageToKill: selector.KILL_COMPUTE,
		KillEvenIfNotReplicated: false,
	}
	selec, _ := selector.NewSelector(*repFile, grng, 3 * time.Second, 1 * time.Second, opt)

	a, _ := selec.NextN()

	inject, _ := injector.NewInjector(*networkMapFileName)
	inject.Start(a)
}